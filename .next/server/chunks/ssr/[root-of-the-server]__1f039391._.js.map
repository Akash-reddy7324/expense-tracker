{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/firebase/client.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\nimport {\r\n  initializeFirestore,\r\n  persistentLocalCache,\r\n  persistentMultipleTabManager,\r\n} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY!,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN!,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID!,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET!,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID!,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID!,\r\n};\r\n\r\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const provider = new GoogleAuthProvider();\r\nexport const db = initializeFirestore(app, {\r\n  localCache: persistentLocalCache({ tabManager: persistentMultipleTabManager() }),\r\n});\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAMA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,MAAM,MAAM,IAAA,+KAAO,IAAG,MAAM,GAAG,IAAA,+KAAO,GAAE,CAAC,EAAE,GAAG,IAAA,qLAAa,EAAC;AACrD,MAAM,OAAO,IAAA,yMAAO,EAAC;AACrB,MAAM,WAAW,IAAI,oNAAkB;AACvC,MAAM,KAAK,IAAA,wLAAmB,EAAC,KAAK;IACzC,YAAY,IAAA,yLAAoB,EAAC;QAAE,YAAY,IAAA,iMAA4B;IAAG;AAChF","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/lib/queries.ts"],"sourcesContent":["import { db } from \"@/firebase/client\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  serverTimestamp,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  getDocs,\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc\r\n} from \"firebase/firestore\";\r\n\r\nexport type PaymentMethod = \"cash\" | \"upi\" | \"card\" | \"bank\" | \"other\";\r\n\r\nexport type Expense = {\r\n  id?: string;\r\n  userId: string;\r\n  date: string; // now stored as \"YYYY-MM-DD\"\r\n  amount: number;\r\n  category: string;\r\n  note?: string;\r\n  paymentMethod?: PaymentMethod;\r\n  createdAt?: any;\r\n  updatedAt?: any;\r\n};\r\n\r\n/**\r\n * Add a new expense\r\n * - Stores date as \"YYYY-MM-DD\" (no UTC conversion issues)\r\n * - Adds createdAt/updatedAt timestamps\r\n */\r\nexport async function addExpense(\r\n  uid: string,\r\n  data: Omit<Expense, \"userId\" | \"createdAt\" | \"updatedAt\" | \"id\">\r\n) {\r\n  const ref = await addDoc(collection(db, \"expenses\", uid, \"items\"), {\r\n    userId: uid,\r\n    ...data,\r\n    createdAt: serverTimestamp(),\r\n    updatedAt: serverTimestamp(),\r\n  });\r\n  return ref.id;\r\n}\r\n\r\n/**\r\n * Get expenses in a given date range\r\n * - fromDate and toDate should be \"YYYY-MM-DD\"\r\n */\r\nexport async function getExpensesInRange(\r\n  uid: string,\r\n  fromDate: string,\r\n  toDate: string\r\n) {\r\n  const q = query(\r\n    collection(db, \"expenses\", uid, \"items\"),\r\n    where(\"date\", \">=\", fromDate),\r\n    where(\"date\", \"<=\", toDate),\r\n    orderBy(\"date\", \"desc\")\r\n  );\r\n  const snap = await getDocs(q);\r\n  return snap.docs.map((d) => ({ id: d.id, ...(d.data() as Expense) }));\r\n}\r\n\r\n/**\r\n * Delete expense by id\r\n */\r\nexport async function deleteExpense(uid: string, id: string) {\r\n  await deleteDoc(doc(db, \"expenses\", uid, \"items\", id));\r\n}\r\n\r\n/**\r\n * Update expense (partial update)\r\n */\r\nexport async function updateExpense(\r\n  uid: string,\r\n  id: string,\r\n  patch: Partial<Expense>\r\n) {\r\n  await updateDoc(doc(db, \"expenses\", uid, \"items\", id), {\r\n    ...patch,\r\n    updatedAt: serverTimestamp(),\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;;;AAgCO,eAAe,WACpB,GAAW,EACX,IAAgE;IAEhE,MAAM,MAAM,MAAM,IAAA,2KAAM,EAAC,IAAA,+KAAU,EAAC,wHAAE,EAAE,YAAY,KAAK,UAAU;QACjE,QAAQ;QACR,GAAG,IAAI;QACP,WAAW,IAAA,oLAAe;QAC1B,WAAW,IAAA,oLAAe;IAC5B;IACA,OAAO,IAAI,EAAE;AACf;AAMO,eAAe,mBACpB,GAAW,EACX,QAAgB,EAChB,MAAc;IAEd,MAAM,IAAI,IAAA,0KAAK,EACb,IAAA,+KAAU,EAAC,wHAAE,EAAE,YAAY,KAAK,UAChC,IAAA,0KAAK,EAAC,QAAQ,MAAM,WACpB,IAAA,0KAAK,EAAC,QAAQ,MAAM,SACpB,IAAA,4KAAO,EAAC,QAAQ;IAElB,MAAM,OAAO,MAAM,IAAA,4KAAO,EAAC;IAC3B,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,IAAM,CAAC;YAAE,IAAI,EAAE,EAAE;YAAE,GAAI,EAAE,IAAI,EAAE;QAAa,CAAC;AACrE;AAKO,eAAe,cAAc,GAAW,EAAE,EAAU;IACzD,MAAM,IAAA,8KAAS,EAAC,IAAA,wKAAG,EAAC,wHAAE,EAAE,YAAY,KAAK,SAAS;AACpD;AAKO,eAAe,cACpB,GAAW,EACX,EAAU,EACV,KAAuB;IAEvB,MAAM,IAAA,8KAAS,EAAC,IAAA,wKAAG,EAAC,wHAAE,EAAE,YAAY,KAAK,SAAS,KAAK;QACrD,GAAG,KAAK;QACR,WAAW,IAAA,oLAAe;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/components/ExpenseForm.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { z } from \"zod\";\r\nimport { addExpense, PaymentMethod } from \"@/lib/queries\";\r\nimport { auth } from \"@/firebase/client\";\r\n\r\n// Schema expects date-only string\r\nconst schema = z.object({\r\n  date: z.string().min(1), // \"YYYY-MM-DD\"\r\n  amount: z.coerce.number().positive(),\r\n  category: z.string().min(1),\r\n  note: z.string().optional(),\r\n  paymentMethod: z.enum(['cash','upi','card','bank','other']).optional()\r\n});\r\n\r\nexport default function ExpenseForm({ onAdded }: { onAdded?: () => void }) {\r\n  const [form, setForm] = useState({\r\n    date: new Date().toISOString().slice(0, 10), // default today\r\n    amount: \"\",\r\n    category: \"Food\",\r\n    note: \"\",\r\n    paymentMethod: \"upi\" as PaymentMethod\r\n  });\r\n  const [busy, setBusy] = useState(false);\r\n  const uid = auth.currentUser?.uid;\r\n\r\n  async function submit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    // Keep date as YYYY-MM-DD (no timezone conversion)\r\n    const parsed = schema.safeParse({ ...form, amount: Number(form.amount) });\r\n    if (!parsed.success || !uid) {\r\n      return alert(\"Check inputs or login again.\");\r\n    }\r\n    setBusy(true);\r\n    try {\r\n      await addExpense(uid, parsed.data);\r\n      setForm({ ...form, amount: \"\", note: \"\" }); // reset inputs\r\n      onAdded?.(); // refresh list\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submit} className=\"grid gap-3 md:grid-cols-5\">\r\n      <input\r\n        className=\"border p-2 rounded md:col-span-1\"\r\n        type=\"date\"\r\n        value={form.date}\r\n        onChange={e => setForm(s => ({ ...s, date: e.target.value }))}\r\n      />\r\n      <input\r\n        className=\"border p-2 rounded md:col-span-1\"\r\n        inputMode=\"decimal\"\r\n        placeholder=\"Amount\"\r\n        value={form.amount}\r\n        onChange={e => setForm(s => ({ ...s, amount: e.target.value }))}\r\n      />\r\n      <select\r\n        className=\"border p-2 rounded md:col-span-1\"\r\n        value={form.category}\r\n        onChange={e => setForm(s => ({ ...s, category: e.target.value }))}\r\n      >\r\n        {[\"Food\",\"Travel\",\"Shopping\",\"Bills\",\"Health\",\"Entertainment\",\"Education\",\"Other\"].map(c=>(\r\n          <option key={c} value={c}>{c}</option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        className=\"border p-2 rounded md:col-span-1\"\r\n        placeholder=\"Note\"\r\n        value={form.note}\r\n        onChange={e => setForm(s => ({ ...s, note: e.target.value }))}\r\n      />\r\n      <select\r\n        className=\"border p-2 rounded md:col-span-1\"\r\n        value={form.paymentMethod}\r\n        onChange={e => setForm(s => ({ ...s, paymentMethod: e.target.value as PaymentMethod }))}\r\n      >\r\n        {[\"cash\",\"upi\",\"card\",\"bank\",\"other\"].map(p=>(\r\n          <option key={p} value={p}>{p}</option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        disabled={busy}\r\n        className=\"md:col-span-5 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\r\n      >\r\n        {busy ? \"Savingâ€¦\" : \"Add Expense\"}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/components/ExpenseList.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { deleteExpense, updateExpense, Expense, PaymentMethod } from \"@/lib/queries\";\r\nimport { auth } from \"@/firebase/client\";\r\nimport { parseISO, format } from \"date-fns\";\r\n\r\nexport default function ExpenseList({ items, refresh }: { items: Expense[]; refresh: () => void }) {\r\n  const uid = auth.currentUser?.uid;\r\n  const [editingId, setEditingId] = useState<string | null>(null);\r\n  const [editForm, setEditForm] = useState<Partial<Expense>>({});\r\n\r\n  if (!uid) {\r\n    return <p className=\"p-3 text-red-500\">Please login to see expenses.</p>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"divide-y border rounded-lg\">\r\n      {items.map((e) => {\r\n        const isEditing = editingId === e.id;\r\n\r\n        return (\r\n          <li key={e.id} className=\"p-3 flex flex-col md:flex-row md:items-center md:justify-between text-sm\">\r\n            {isEditing ? (\r\n              // --- EDIT FORM ---\r\n              <form\r\n                onSubmit={async (ev) => {\r\n                  ev.preventDefault();\r\n                  try {\r\n                    await updateExpense(uid, e.id!, editForm);\r\n                    setEditingId(null);\r\n                    setEditForm({});\r\n                    refresh();\r\n                  } catch (err) {\r\n                    alert(\"Failed to update expense: \" + (err as Error).message);\r\n                  }\r\n                }}\r\n                className=\"flex flex-col md:flex-row gap-2 w-full\"\r\n              >\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"border p-1 rounded\"\r\n                  value={editForm.date ?? e.date}\r\n                  onChange={(ev) => setEditForm((f) => ({ ...f, date: ev.target.value }))}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"border p-1 rounded\"\r\n                  value={editForm.amount ?? e.amount}\r\n                  onChange={(ev) => setEditForm((f) => ({ ...f, amount: Number(ev.target.value) }))}\r\n                />\r\n                <select\r\n                  className=\"border p-1 rounded\"\r\n                  value={editForm.category ?? e.category}\r\n                  onChange={(ev) => setEditForm((f) => ({ ...f, category: ev.target.value }))}\r\n                >\r\n                  {[\"Food\",\"Travel\",\"Shopping\",\"Bills\",\"Health\",\"Entertainment\",\"Education\",\"Other\"].map(c=>(\r\n                    <option key={c} value={c}>{c}</option>\r\n                  ))}\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Note\"\r\n                  className=\"border p-1 rounded\"\r\n                  value={editForm.note ?? e.note ?? \"\"}\r\n                  onChange={(ev) => setEditForm((f) => ({ ...f, note: ev.target.value }))}\r\n                />\r\n                <select\r\n                  className=\"border p-1 rounded\"\r\n                  value={editForm.paymentMethod ?? e.paymentMethod ?? \"cash\"}\r\n                  onChange={(ev) => setEditForm((f) => ({ ...f, paymentMethod: ev.target.value as PaymentMethod }))}\r\n                >\r\n                  {[\"cash\",\"upi\",\"card\",\"bank\",\"other\"].map(p=>(\r\n                    <option key={p} value={p}>{p}</option>\r\n                  ))}\r\n                </select>\r\n\r\n                <div className=\"flex gap-2\">\r\n                  <button type=\"submit\" className=\"px-2 py-1 bg-green-600 text-white rounded\">Save</button>\r\n                  <button type=\"button\" onClick={() => setEditingId(null)} className=\"px-2 py-1 bg-gray-400 text-white rounded\">Cancel</button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              // --- READ MODE ---\r\n              <div className=\"flex items-center justify-between w-full\">\r\n                <div>\r\n                  <div className=\"font-medium\">â‚¹{e.amount.toFixed(2)} â€” {e.category}</div>\r\n                  <div className=\"text-gray-600\">\r\n                    {format(parseISO(e.date), \"dd MMM yyyy\")} Â· {e.note || \"â€”\"} Â· {e.paymentMethod || \"â€”\"}\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-3\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setEditingId(e.id!);\r\n                      setEditForm(e); // preload form with existing values\r\n                    }}\r\n                    className=\"text-blue-600\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={async () => {\r\n                      try {\r\n                        await deleteExpense(uid, e.id!);\r\n                        refresh();\r\n                      } catch (err) {\r\n                        alert(\"Failed to delete expense: \" + (err as Error).message);\r\n                      }\r\n                    }}\r\n                    className=\"text-red-600\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n      {items.length === 0 && <li className=\"p-3 text-gray-500\">No expenses yet.</li>}\r\n    </ul>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/components/StatsCards.tsx"],"sourcesContent":["export default function StatsCards({ total, avgPerDay, count }:{ total:number; avgPerDay:number; count:number }) {\r\n  const items = [\r\n    { label: \"This Month\", value: `â‚¹${total.toFixed(2)}` },\r\n    { label: \"Avg / Day\", value: `â‚¹${avgPerDay.toFixed(2)}` },\r\n    { label: \"Entries\", value: `${count}` },\r\n  ];\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-3\">\r\n      {items.map(x=>(\r\n        <div key={x.label} className=\"p-4 border rounded-lg\">\r\n          <div className=\"text-gray-600 text-sm\">{x.label}</div>\r\n          <div className=\"text-xl font-semibold\">{x.value}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAe,SAAS,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAmD;IAC7G,MAAM,QAAQ;QACZ;YAAE,OAAO;YAAc,OAAO,CAAC,CAAC,EAAE,MAAM,OAAO,CAAC,IAAI;QAAC;QACrD;YAAE,OAAO;YAAa,OAAO,CAAC,CAAC,EAAE,UAAU,OAAO,CAAC,IAAI;QAAC;QACxD;YAAE,OAAO;YAAW,OAAO,GAAG,OAAO;QAAC;KACvC;IACD,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAA,kBACT,8OAAC;gBAAkB,WAAU;;kCAC3B,8OAAC;wBAAI,WAAU;kCAAyB,EAAE,KAAK;;;;;;kCAC/C,8OAAC;wBAAI,WAAU;kCAAyB,EAAE,KAAK;;;;;;;eAFvC,EAAE,KAAK;;;;;;;;;;AAOzB","debugId":null}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/lib/date.ts"],"sourcesContent":["import { startOfMonth, endOfMonth, format } from \"date-fns\";\r\n\r\n/**\r\n * Returns the start and end dates of the given month\r\n * formatted as \"YYYY-MM-DD\" (date-only, no time).\r\n */\r\nexport const monthRangeDateOnly = (d = new Date()) => ({\r\n  from: format(startOfMonth(d), \"yyyy-MM-dd\"), // e.g. \"2025-08-01\"\r\n  to: format(endOfMonth(d), \"yyyy-MM-dd\"),     // e.g. \"2025-08-31\"\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;AAMO,MAAM,qBAAqB,CAAC,IAAI,IAAI,MAAM,GAAK,CAAC;QACrD,MAAM,IAAA,gKAAM,EAAC,IAAA,4JAAY,EAAC,IAAI;QAC9B,IAAI,IAAA,gKAAM,EAAC,IAAA,wJAAU,EAAC,IAAI;IAC5B,CAAC","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/components/charts/CategoryDonut.tsx"],"sourcesContent":["\"use client\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport default function CategoryDonut({ byCategory }: { byCategory: Record<string, number> }) {\r\n  const labels = Object.keys(byCategory);\r\n  const values = Object.values(byCategory);\r\n\r\n  const professionalPalette = [\r\n    \"#1f77b4\", // blue\r\n    \"#ff7f0e\", // orange\r\n    \"#2ca02c\", // green\r\n    \"#d62728\", // red\r\n    \"#9467bd\", // purple\r\n    \"#8c564b\", // brown\r\n    \"#e377c2\", // pink\r\n    \"#7f7f7f\", // grey\r\n    \"#bcbd22\", // olive\r\n    \"#17becf\", // teal\r\n  ];\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        data: values,\r\n        backgroundColor: professionalPalette.slice(0, labels.length),\r\n        borderColor: \"#ffffff\",\r\n        borderWidth: 1.5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false, // allows custom sizing\r\n    cutout: \"70%\", // makes hole larger (default ~50%)\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\" as const,\r\n        labels: {\r\n          usePointStyle: true,\r\n          color: \"#374151\", // grey-700\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-sm mx-auto\" style={{ height: 300, width: 300 }}>\r\n      <Doughnut data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAIA,qKAAO,CAAC,QAAQ,CAAC,0KAAU,EAAE,uKAAO,EAAE,sKAAM;AAE7B,SAAS,cAAc,EAAE,UAAU,EAA0C;IAC1F,MAAM,SAAS,OAAO,IAAI,CAAC;IAC3B,MAAM,SAAS,OAAO,MAAM,CAAC;IAE7B,MAAM,sBAAsB;QAC1B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,OAAO;QACX;QACA,UAAU;YACR;gBACE,MAAM;gBACN,iBAAiB,oBAAoB,KAAK,CAAC,GAAG,OAAO,MAAM;gBAC3D,aAAa;gBACb,aAAa;YACf;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,qBAAqB;QACrB,QAAQ;QACR,SAAS;YACP,QAAQ;gBACN,UAAU;gBACV,QAAQ;oBACN,eAAe;oBACf,OAAO;gBACT;YACF;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;QAAmB,OAAO;YAAE,QAAQ;YAAK,OAAO;QAAI;kBACjE,cAAA,8OAAC,kKAAQ;YAAC,MAAM;YAAM,SAAS;;;;;;;;;;;AAGrC","debugId":null}},
    {"offset": {"line": 878, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/app/%28app%29/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\nimport ExpenseForm from \"@/components/ExpenseForm\";\r\nimport ExpenseList from \"@/components/ExpenseList\";\r\nimport StatsCards from \"@/components/StatsCards\";\r\nimport { monthRangeDateOnly } from \"@/lib/date\";  // âœ… FIXED\r\nimport { getExpensesInRange, Expense } from \"@/lib/queries\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { auth } from \"@/firebase/client\";\r\nimport CategoryDonut from \"@/components/charts/CategoryDonut\";\r\n\r\nexport default function DashboardPage() {\r\n  const [items, setItems] = useState<Expense[]>([]);\r\n\r\n  async function refresh() {\r\n    const uid = auth.currentUser?.uid;\r\n    if (!uid) return;\r\n\r\n    const { from, to } = monthRangeDateOnly(); // âœ… FIXED\r\n    const data = await getExpensesInRange(uid, from, to);\r\n    setItems(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, []);\r\n\r\n  const total = items.reduce((s, i) => s + i.amount, 0);\r\n  const days = new Date().getDate();\r\n  const byCategory = items.reduce<Record<string, number>>(\r\n    (acc, i) => ((acc[i.category] = (acc[i.category] || 0) + i.amount), acc),\r\n    {}\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h1 className=\"text-2xl font-semibold\">Dashboard</h1>\r\n      <ExpenseForm onAdded={refresh} />\r\n      <StatsCards total={total} avgPerDay={total / Math.max(1, days)} count={items.length} />\r\n      <CategoryDonut byCategory={byCategory} />\r\n      <div className=\"space-y-2\">\r\n        <h2 className=\"text-lg font-semibold\">Recent expenses</h2>\r\n        <ExpenseList items={items} refresh={refresh} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA,2LAAkD,UAAU;AAC5D;AACA;AACA;AACA;AARA;;;;;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAY,EAAE;IAEhD,eAAe;QACb,MAAM,MAAM,0HAAI,CAAC,WAAW,EAAE;QAC9B,IAAI,CAAC,KAAK;QAEV,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAA,iIAAkB,KAAI,UAAU;QACrD,MAAM,OAAO,MAAM,IAAA,oIAAkB,EAAC,KAAK,MAAM;QACjD,SAAS;IACX;IAEA,IAAA,kNAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,MAAM,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,EAAE,MAAM,EAAE;IACnD,MAAM,OAAO,IAAI,OAAO,OAAO;IAC/B,MAAM,aAAa,MAAM,MAAM,CAC7B,CAAC,KAAK,IAAM,CAAC,AAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAG,GAAG,GACvE,CAAC;IAGH,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC,qIAAW;gBAAC,SAAS;;;;;;0BACtB,8OAAC,oIAAU;gBAAC,OAAO;gBAAO,WAAW,QAAQ,KAAK,GAAG,CAAC,GAAG;gBAAO,OAAO,MAAM,MAAM;;;;;;0BACnF,8OAAC,iJAAa;gBAAC,YAAY;;;;;;0BAC3B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,8OAAC,qIAAW;wBAAC,OAAO;wBAAO,SAAS;;;;;;;;;;;;;;;;;;AAI5C","debugId":null}}]
}