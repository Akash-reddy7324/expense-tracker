{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/firebase/client.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\nimport {\r\n  initializeFirestore,\r\n  persistentLocalCache,\r\n  persistentMultipleTabManager,\r\n} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY!,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN!,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID!,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET!,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID!,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID!,\r\n};\r\n\r\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const provider = new GoogleAuthProvider();\r\nexport const db = initializeFirestore(app, {\r\n  localCache: persistentLocalCache({ tabManager: persistentMultipleTabManager() }),\r\n});\r\n"],"names":[],"mappings":";;;;;;;;AASU;AATV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAMA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,MAAM,MAAM,IAAA,kLAAO,IAAG,MAAM,GAAG,IAAA,kLAAO,GAAE,CAAC,EAAE,GAAG,IAAA,wLAAa,EAAC;AACrD,MAAM,OAAO,IAAA,wMAAO,EAAC;AACrB,MAAM,WAAW,IAAI,mNAAkB;AACvC,MAAM,KAAK,IAAA,6LAAmB,EAAC,KAAK;IACzC,YAAY,IAAA,8LAAoB,EAAC;QAAE,YAAY,IAAA,sMAA4B;IAAG;AAChF","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/expense-tracker/components/AuthGate.tsx"],"sourcesContent":["\"use client\";\r\nimport { ReactNode, useEffect, useState } from \"react\";\r\nimport { onAuthStateChanged, signInWithPopup } from \"firebase/auth\";\r\nimport { auth, provider } from \"@/firebase/client\";\r\nimport Link from \"next/link\";\r\n\r\nexport default function AuthGate({ children }: { children: ReactNode }) {\r\n  const [uid, setUid] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    return onAuthStateChanged(auth, (u) => {\r\n      setUid(u?.uid ?? null);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n  if (loading) return <div className=\"p-6\">Loadingâ€¦</div>;\r\n  if (!uid) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center p-6\">\r\n        <div className=\"max-w-sm w-full border rounded-lg p-6 space-y-4\">\r\n          <h1 className=\"text-xl font-semibold\">Sign in required</h1>\r\n          <p className=\"text-sm text-gray-600\">Please sign in to continue.</p>\r\n          <button\r\n            onClick={() => signInWithPopup(auth, provider)}\r\n            className=\"w-full py-2 rounded bg-black text-white\"\r\n          >\r\n            Continue with Google\r\n          </button>\r\n          <Link href=\"/(auth)/login\" className=\"block text-center text-blue-600 underline text-sm\">\r\n            Go to login page\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;AACA;AACA;;;AAJA;;;;;AAMe,SAAS,SAAS,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;;IAC/B,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,yKAAQ,EAAgB;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,IAAA,0KAAS;8BAAC;YACR,OAAO,IAAA,mNAAkB,EAAC,6HAAI;sCAAE,CAAC;wBACxB;oBAAP,OAAO,CAAA,SAAA,cAAA,wBAAA,EAAG,GAAG,cAAN,oBAAA,SAAU;oBACjB,WAAW;gBACb;;QACF;6BAAG,EAAE;IACL,IAAI,SAAS,qBAAO,6LAAC;QAAI,WAAU;kBAAM;;;;;;IACzC,IAAI,CAAC,KAAK;QACR,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;kCACrC,6LAAC;wBACC,SAAS,IAAM,IAAA,gNAAe,EAAC,6HAAI,EAAE,iIAAQ;wBAC7C,WAAU;kCACX;;;;;;kCAGD,6LAAC,0KAAI;wBAAC,MAAK;wBAAgB,WAAU;kCAAoD;;;;;;;;;;;;;;;;;IAMjG;IACA,qBAAO;kBAAG;;AACZ;GA9BwB;KAAA","debugId":null}}]
}